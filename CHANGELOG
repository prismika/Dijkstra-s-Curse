1/24/19:-Begin project
		-Configure .gitignore, Makefile and create dungeon.c
		-Add map display functionality
1/25/19:-Create function to test map print
1/28/19:-Generate map with one room. Introduce bedrock for outer border.
		-Generate multiple rooms without collisions.
		-Allow rooms to border each other.
		-Much refactoring
		-Add rudimentary corridor placement and corridor display functionality
		-Successfully place arbitrary corridors
1/29/19:-Generate and place corridors
		-Debug corridor placement. Automatically connect two rooms successfully.
		-System populates dungeon with all corridors, crashes occasionally.
		-Introduce custom seed functionality to help debug corridor population crash
1/30/19:-Debug corridor population crash. Dungeons are properly connected.
		-Flip x and y in all 2-d arrays because Dr. Sheaffer and the C language itself demanded it of me.
		-Add stair placement. Remove map border.
2/4/19:	-Cleaning
		-Add hardness property to blocks
2/5/19:	-Refactor by putting room list inside map struct
2/8/19: -Test binary read/write and add stubs for read/write functions.
		-Successfully read file up to hardness matrix.
		-Successfully parse map file.
		-Successfully construct map from file, except for room size bug.
		-Fix room size bug. Successfully load map from file.
		-Successfully generate, write, and read same file.with fidelity.
		-Clean up print statements and comments.
		-Refactor main. Parse command line successfully.
2/9/19:	-Update README and CHANGELOG
		-Create mapElements library to house map-related types
		-Add typedef to map types
2/10/19:-Utilize new mapElements interface
2/14/19:-Refactor map specification constants into mapElements.c
		-Create display library
2/15/19:-Create dij library for Dijkstra's algorithm
2/17/19:-Debug dij library
		-Implement dij library in dungeonGen
		-Expand display library functionality to print X's for immutable blocks and @ for the PC in distance maps
		-New maps place PC in the corner of room 0
		-Display library prints @ for the PC when displaying the map
		-Add support for distance maps for non-tunneling creatures
		-Display library prints spaces for rock in non-tunneling maps
		-Refactor stair placement to separate out the random block selection
		-Utilize newly refactored random block selection to place PC in a random legal position when a map is generated
		-Update README and CHANGELOG
2/18/19 -Trick out the Makefile
2/20/19 -Move read/write responsibilities to MapIO
2/21/19 -Refactor to use command pattern when parsing CLI
		-Refactor the map into a higher file to avoid circular dependencies in the future
2/26/19 -Stub Entity type and interfaces for that type
2/27/19 -Add population to map struct
		-Add interfaces for accessing population in map struct
		-Stub the map populator
		-Place distance maps inside the map
2/28/19 -Fight Sheaffer's heap valiantly. Create TurnMaster, a discrete event simulator.
		-Stub movement strategies
		-Complete MapPopulator
		-Complete movement strategies
		-Randomize entity speeds
3/3/19	-Fix death mechanic
3/5/19	-Create skeleton code for curses display
3/6/19	-Change map display over to curses
		-Create inputCollector
		-Refactor display.c
		-Implement very simple movement of PC
		-Implement input recognition for all necessary keys
3/7/19	-Implement all PC movement keys
		-Refactor interpretation logic in dijkstrasCurse
		-Generate new level when stair key is pressed
3/10/19	-Implement 'Q' for quit.
		-Map struct owns references to entire population.
		-Create simple buggy monster map display function
		-Open and close monster list successfully
3/11/19	-Monster list scrolls
		-PC restricted from tunneling
		-Monster list shows relative position, excludes dead monsters
		-Update README and CHANGELOG
3/25/19 -Give gitignore a tuneup
		-Port everything to C++
		-Change all structs to classes, except in Shaeffer's heap
3/26/19 -Major refactoring, moving controller responsibility for gameplay into class in gameTypes
		-Change all prints to couts
		-More refactoring. Introduce state pattern into gameplay controller to handle mode specific functionality like monster list and such.
3/27/19 -Introduce teleportation mode and implement cursor
		-Add full functionality and randomness to teleportation mode
3/28/19 -Limit visibility
		-Update README and CHANGELOG

