This is Dijkstra's Curse, an ASCII-based rogue-like game. This iteration has multiple files, with an architecture consisting of three layers:

Layer 1: 	dungeonGen (Generates maps, reads and writes map files, parses CLI)
Layer 2: 	dij (Implements Dijkstra's algorithm)
Layer 3: 	heap (Dr. Sheaffer's heap)
			mapElements (stores map specs and defines types such as Map, Block, BlockType, etc.)

Usage:
./dungeonGen
	Prints randomly generated dungeon along with the seed
./dungeonGen --save
	Same as with no arguments, except the dungeon is saved to ~/.rlg327/ under the name "dungeon," if the directory exists.
./dungeonGen --load
	Loads the dungeon at ~/.rlg327/dungeon if it exists, and displays it.
./dungeonGen --save --load
	Loads the dungeon at ~/.rlg327/dungeon, displays it, and saves it again.
*NEW*
./dungeonGen --distances
	Randomly generates a dungeon, prints the seed and dungeon, followed by distance maps for both tunneling and non-tunneling entities.

I hope your semester is going well!
